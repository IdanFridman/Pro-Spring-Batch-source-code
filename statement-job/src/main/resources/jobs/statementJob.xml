<?xml version="1.0" encoding="UTF-8"?> 
<beans:beans xmlns="http://www.springframework.org/schema/batch" 
       xmlns:beans="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                    http://www.springframework.org/schema/beans/spring-beans-2.0.xsd 
                    http://www.springframework.org/schema/batch 
	                    http://www.springframework.org/schema/batch/spring-batch-2.1.xsd"> 

    <beans:import resource="../launch-context.xml"/> 

	<beans:bean id="idIncrementer" class="org.springframework.batch.core.launch.support.RunIdIncrementer"/>
	
	<beans:bean id="customerTransactionFile" class="org.springframework.core.io.FileSystemResource">
		<beans:constructor-arg value="/Users/mminella/temp/test.csv"/>
	</beans:bean>
	
    <beans:bean id="customerFieldSetMapper" class="com.apress.springbatch.statement.reader.CustomerFieldSetMapper"/>
	
    <beans:bean id="transactionFieldSetMapper" class="com.apress.springbatch.statement.reader.TransactionFieldSetMapper"/>
	
	<beans:bean id="customerTransactionLineMapper" class="com.apress.springbatch.statement.reader.RegularExpressionLineMapper">
		<beans:property name="lineTokenizers">
			<beans:map>
				<beans:entry key="^\d+,[A-Z][a-zA-Z]+,[A-Z][a-zA-Z]+,.*" value-ref="customerLineTokenizer"/>
				<beans:entry key="^\d+,[A-Z\.\ ]+,\d+.*" value-ref="transactionLineTokenizer"/>
			</beans:map>
		</beans:property>
		<beans:property name="fieldSetMappers">
			<beans:map>
				<beans:entry key="^\d+,[A-Z][a-zA-Z]+,[A-Z][a-zA-Z]+,.*" value-ref="customerFieldSetMapper"/>
				<beans:entry key="^\d+,[A-Z\.\ ]+,\d+.*" value-ref="transactionFieldSetMapper"/>
			</beans:map>
		</beans:property>
	</beans:bean>
	
     <beans:bean id="customerLineTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <beans:property name="names" value="taxId,firstName,lastName,address,city,state,zip,accountNumber"/>
        <beans:property name="delimiter" value=","/>
    </beans:bean>
	
     <beans:bean id="transactionLineTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
        <beans:property name="names" value="accountNumber,stockTicker,price,quantity,timestamp"/>
        <beans:property name="delimiter" value=","/>
    </beans:bean>
	
	<beans:bean id="customerTransactionReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<beans:property name="resource" ref="customerTransactionFile"/>
		<beans:property name="lineMapper" ref="customerTransactionLineMapper"/>
	</beans:bean>
	
	<beans:bean id="customerLookupItemProcessor" class="com.apress.springbatch.statement.processor.CustomerLookupItemProcessor">
		<beans:property name="customerDao" ref="customerDao"/>
		<beans:property name="tickerDao" ref="tickerDao"/>
	</beans:bean>
	
	<beans:bean id="transactionDao" class="com.apress.springbatch.statement.dao.impl.TransactionDaoJdbc">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
	<beans:bean id="customerDao" class="com.apress.springbatch.statement.dao.impl.CustomerDaoJdbc">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
	<beans:bean id="tickerDao" class="com.apress.springbatch.statement.dao.impl.TickerDaoJdbc">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
	<beans:bean id="customerService" class="com.apress.springbatch.statement.service.impl.CustomerServiceImpl">
		<beans:property name="customerDao" ref="customerDao"/>
	</beans:bean>
	
	<beans:bean id="transactionService" class="com.apress.springbatch.statement.service.impl.TransactionServiceImpl">
		<beans:property name="transactionDao" ref="transactionDao"/>
	</beans:bean>
	
	<beans:bean id="customerImportWriter" class="org.springframework.batch.item.adapter.ItemWriterAdapter">
		<beans:property name="targetObject" ref="customerService"/>
		<beans:property name="targetMethod" value="saveCustomer"/>
	</beans:bean>
	
	<beans:bean id="transactionImportWriter" class="org.springframework.batch.item.adapter.ItemWriterAdapter">
		<beans:property name="targetObject" ref="transactionService"/>
		<beans:property name="targetMethod" value="saveTransaction"/>
	</beans:bean>
	
	<beans:bean id="customerTransactionItemWriter" class="org.springframework.batch.item.support.ClassifierCompositeItemWriter">
		<beans:property name="classifier">
			<beans:bean class="org.springframework.batch.classify.SubclassClassifier">
				<beans:property name="typeMap">
					<beans:map>
						<beans:entry key="com.apress.springbatch.statement.domain.Customer" value-ref="customerImportWriter"/>
						<beans:entry key="com.apress.springbatch.statement.domain.Transaction" value-ref="transactionImportWriter"/>
					</beans:map>
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>
	
<!--	<beans:bean id="parameterValidator" class="com.apress.springbatch.statement.validator.JobParameterValidator"/>-->
<!--	-->
<!--	<beans:bean id="stockPriceWebServiceReader" class="com.apress.springbatch.statement.reader.UrlReader">-->
<!--		<beans:property name="host" value="download.finance.yahoo.com"/>-->
<!--		<beans:property name="path" value="/d/quotes.csv"/>-->
<!--		<beans:property name="transactionDao" ref="transactionDao"/>-->
<!--	</beans:bean>-->
<!--	-->
<!--	<beans:bean id="transactionDao" class="com.apress.springbatch.statement.dao.TransactionDao">-->
<!--		<beans:property name="dataSource" ref="dataSource"/>-->
<!--	</beans:bean>-->
<!--	-->
<!--	<beans:bean id="stockFile" class="org.springframework.core.io.FileSystemResource">-->
<!--		<beans:constructor-arg value="/Users/mminella/temp/stockFile.csv"/>-->
<!--	</beans:bean>-->
<!---->
<!--	<beans:bean id="step1PassThroughWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">-->
<!--	    <beans:property name="resource" ref="stockFile" />-->
<!--		<beans:property name="lineAggregator">-->
<!--			<beans:bean class="org.springframework.batch.item.file.transform.PassThroughLineAggregator"/>-->
<!--		</beans:property>-->
<!--	</beans:bean>-->
<!--	-->
<!--	<beans:bean id="stockFile2" class="org.springframework.core.io.FileSystemResource">-->
<!--		<beans:constructor-arg value="/Users/mminella/temp/stockFile2.csv"/>-->
<!--	</beans:bean>-->
<!---->
<!--	<beans:bean id="stockImportWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">-->
<!--	    <beans:property name="dataSource" ref="dataSource"/>-->
<!--	    <beans:property name="sql" value="insert into customer (firstName, middleInitial, lastName, address, city, state, zip) values (?, ?, ?, ?, ?, ?, ?)"/>-->
<!--	    <beans:property name="itemPreparedStatementSetter" ref="preparedStatementSetter"/>-->
<!--	</beans:bean>-->
<!--		-->
<!--	<beans:bean id="preparedStatementSetter" class="com.apress.springbatch.chapter9.CustomerItemPreparedStatementSetter"/>-->
<!--	-->
<!--	<beans:bean id="customerFile" class="org.springframework.core.io.FileSystemResource">-->
<!--		<beans:constructor-arg value="/Users/mminella/temp/customerOutputFile.csv"/>-->
<!--	</beans:bean>-->
<!---->
<!--	<beans:bean id="step3PassThroughWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">-->
<!--	    <beans:property name="resource" ref="customerFile" />-->
<!--		<beans:property name="lineAggregator">-->
<!--			<beans:bean class="org.springframework.batch.item.file.transform.PassThroughLineAggregator"/>-->
<!--		</beans:property>-->
<!--	</beans:bean>-->
<!--	-->
<!--	<beans:bean id="tiersFile" class="org.springframework.core.io.FileSystemResource">-->
<!--		<beans:constructor-arg value="/Users/mminella/temp/tiersFile.csv"/>-->
<!--	</beans:bean>-->
<!---->
<!--	<beans:bean id="step4PassThroughWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">-->
<!--	    <beans:property name="resource" ref="tiersFile" />-->
<!--		<beans:property name="lineAggregator">-->
<!--			<beans:bean class="org.springframework.batch.item.file.transform.PassThroughLineAggregator"/>-->
<!--		</beans:property>-->
<!--	</beans:bean>-->
<!--	-->
<!--	<beans:bean id="feesFile" class="org.springframework.core.io.FileSystemResource">-->
<!--		<beans:constructor-arg value="/Users/mminella/temp/feesFile.csv"/>-->
<!--	</beans:bean>-->
<!---->
<!--	<beans:bean id="step5PassThroughWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">-->
<!--	    <beans:property name="resource" ref="feesFile" />-->
<!--		<beans:property name="lineAggregator">-->
<!--			<beans:bean class="org.springframework.batch.item.file.transform.PassThroughLineAggregator"/>-->
<!--		</beans:property>-->
<!--	</beans:bean>-->
<!--	-->
<!--	<beans:bean id="stockFileReader" class="org.springframework.batch.item.file.FlatFileItemReader">-->
<!--	    <beans:property name="resource" ref="stockFile" />-->
<!--	    <beans:property name="lineMapper">-->
<!--	        <beans:bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">-->
<!--	            <beans:property name="lineTokenizer">-->
<!--	                <beans:bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">-->
<!--	                    <beans:property name="names"-->
<!--	                        value="ticker,price"/>-->
<!--	                    <beans:property name="delimiter" value=","/>-->
<!--	                </beans:bean>-->
<!--	            </beans:property>-->
<!--	            <beans:property name="fieldSetMapper">-->
<!--	                <beans:bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">-->
<!--	                    <beans:property name="prototypeBeanName" value="stock"/>-->
<!--	                </beans:bean>-->
<!--	            </beans:property>-->
<!--	        </beans:bean>-->
<!--	    </beans:property>-->
<!--	</beans:bean>-->
<!--	-->
<!--	<beans:bean id="stock" class="com.apress.springbatch.statement.domain.Stock" scope="prototype"/>-->
<!--	-->
<!--	<beans:bean id="aggregatedCustomerTransactionReader" class="com.apress.springbatch.statement.reader.CustomerFileReader">-->
<!--		<beans:property name="delegate" ref="customerTransactionReader"/>-->
<!--	</beans:bean>-->
<!--	-->
<!--	<beans:bean id="accountTransactionQtyItemReader"    -->
<!--	                      class="org.springframework.batch.item.database.JdbcCursorItemReader">-->
<!--	    <beans:property name="dataSource" ref="dataSource"/>-->
<!--	    <beans:property name="sql" value="select a.account_number, count(*) as qty from accounts a inner join transactions t on t.accounts_id = a.id group by a.account_number"/>-->
<!--	    <beans:property name="rowMapper" ref="accountTransactionQtyRowMapper"/>-->
<!--	</beans:bean>-->
<!--		-->
<!--	<beans:bean id="accountTransactionQtyRowMapper" class="com.apress.springbatch.statement.reader.AccountTransactionQuantityRowMapper"/>-->
<!---->
<!--	<beans:bean id="transactionPricingItemReader"    -->
<!--	                      class="org.springframework.batch.item.database.JdbcCursorItemReader">-->
<!--	    <beans:property name="dataSource" ref="dataSource"/>-->
<!--	    <beans:property name="sql" value="select a.id as account_id, a.account_number, a.pricing_tier, t.id as transaction_id, t.ticker, t.quantity, t.price, t.trade_timestamp, t.fee from accounts a inner join transactions t on a.id = t.accounts_id"/>-->
<!--	    <beans:property name="rowMapper" ref="transactionPricingRowMapper"/>-->
<!--	</beans:bean>-->
<!--		-->
<!--	<beans:bean id="transactionPricingRowMapper" class="com.apress.springbatch.statement.reader.AccountTransactionRowMapper"/>-->
<!---->
<!--	<beans:bean id="statementFile" class="org.springframework.core.io.FileSystemResource">-->
<!--		<beans:constructor-arg value="/Users/mminella/temp/statementFile.csv"/>-->
<!--	</beans:bean>-->
<!---->
<!--	<beans:bean id="step6PassThroughWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">-->
<!--	    <beans:property name="resource" ref="statementFile" />-->
<!--		<beans:property name="lineAggregator">-->
<!--			<beans:bean class="org.springframework.batch.item.file.transform.PassThroughLineAggregator"/>-->
<!--		</beans:property>-->
<!--	</beans:bean>-->
<!--	-->
<!--	<beans:bean id="customerReader"    -->
<!--	                      class="org.springframework.batch.item.database.JdbcCursorItemReader">-->
<!--	    <beans:property name="dataSource" ref="dataSource"/>-->
<!--	    <beans:property name="sql" value="select a.id as account_id, a.account_number, a.cash_balance, a.pricing_tier, ad.address_1 as address, ad.city, ad.state, ad.zip, c.id as customer_id, c.first_name, c.last_name, t.id as transaction_id, t.ticker, t.quantity, t.price, t.trade_timestamp, t.fee from customers c inner join addresses ad on c.addresses_id = ad.id left outer join accounts a on a.customers_id = c.id left outer join transactions t on t.accounts_id = a.id order by c.id"/>-->
<!--	    <beans:property name="rowMapper" ref="customerStatementRowMapper"/>-->
<!--	</beans:bean>-->
<!--		-->
<!--	<beans:bean id="customerStatementRowMapper" class="com.apress.springbatch.statement.reader.CustomerStatementRowMapper"/>-->
<!---->
<!--	<beans:bean id="customerStatementReader" class="com.apress.springbatch.statement.reader.CustomerStatementReader">-->
<!--		<beans:property name="delegate" ref="customerReader"/>-->
<!--	</beans:bean>-->
<!--	-->
<!--	<beans:bean id="pricingTiersItemProcessor" class="com.apress.springbatch.statement.processor.PricingTierItemProcessor"/>-->
<!--	-->
<!--	<beans:bean id="feesItemProcessor" class="com.apress.springbatch.statement.processor.FeesItemProcessor"/>-->
<!---->
<!--	<step id="retrieveStockPrices">-->
<!--		<tasklet>-->
<!--			<chunk reader="stockPriceWebServiceReader" writer="step1PassThroughWriter" commit-interval="1"/>-->
<!--		</tasklet>-->
<!--	</step>-->
<!--	-->
<!--	<step id="importStockPrices">-->
<!--		<tasklet>-->
<!--			<chunk reader="stockFileReader" writer="step2PassThroughWriter" commit-interval="10"/>-->
<!--		</tasklet>-->
<!--	</step>-->
<!--	-->
	<step id="importCustomerAndTransactionData">
		<tasklet>
			<chunk reader="customerTransactionReader" processor="customerLookupItemProcessor" writer="customerTransactionItemWriter" commit-interval="10"/>
		</tasklet>
	</step>
	
<!--	<step id="calculateTiers">-->
<!--		<tasklet>-->
<!--			<chunk reader="accountTransactionQtyItemReader" processor="pricingTiersItemProcessor" writer="step4PassThroughWriter" commit-interval="10"/>-->
<!--		</tasklet>-->
<!--	</step>-->
<!--	-->
<!--	<step id="calculateTransactionFees">-->
<!--		<tasklet>-->
<!--			<chunk reader="transactionPricingItemReader" processor="feesItemProcessor" writer="step5PassThroughWriter" commit-interval="10"/>-->
<!--		</tasklet>-->
<!--	</step>-->
<!--	-->
<!--	<step id="generateMonthlyStatements">-->
<!--		<tasklet>-->
<!--			<chunk reader="customerStatementReader" writer="step6PassThroughWriter" commit-interval="10">-->
<!--				<streams>-->
<!--					<stream ref="customerReader"/>-->
<!--				</streams>-->
<!--			</chunk>-->
<!--		</tasklet>-->
<!--	</step>-->
	
	<job id="statementJob" incrementer="idIncrementer">
		<step id="step1" parent="importCustomerAndTransactionData"/>
<!--		<step id="step1" parent="retrieveStockPrices" next="step2"/>-->
<!--		<step id="step2" parent="importStockPrices" next="step3"/>-->
<!--		<step id="step3" parent="importCustomerAndTransactionData" next="step4"/>-->
<!--		<step id="step4" parent="calculateTiers" next="step5"/>-->
<!--		<step id="step5" parent="calculateTransactionFees" next="step6"/>-->
<!--		<step id="step6" parent="generateMonthlyStatements"/>-->
<!--		<validator ref="parameterValidator"/>-->
    </job>
</beans:beans>

